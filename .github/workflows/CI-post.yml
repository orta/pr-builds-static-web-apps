name: Post CI Secure Run
on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  playground:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1

       # Make a folder to drop all the rendered static html into
      - run: mkdir built

      # Download into there
      - name: Download artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: CI.yml
          commit: ${{ github.event.workflow_run.head_commit.id }}
          name: built-site
          path: built/public

      # This might be optional
      - name: "Make a fake 'app' for the azure project of the static HTML"
        run: |
          echo '{ "name": "fake", "scripts": { "build": "" } }' > built/package.json

      
      # Lets us use one-liner JSON manipulations on package.jsons
      - run: "npm install -g json"

      - name: Setup PR metadata
        id: pr_info
        run: |
         echo "::set-output name=number::$(json -f built/public/pr.json 'pull_request.number')"
         echo "::set-output name=repo::$(json -f built/public/pr.json 'pull_request.base.repo.full_name')"

      # Changes the branch to be the PR, after this the build is deployed.
      # This is to set up the environment in Azure, and then is switched back straight after
      # to ensure no code from that PR is executed.
      - name: "Change branch"
        run: |
          git fetch origin pull/${{ steps.pr_info.outputs.number }}/head:pr_branch 
          git checkout pr_banch

      # Uploads the static build
      - name: Build And Deploy
        uses: Azure/static-web-apps-deploy@v0.0.1-preview
        id: deploy
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ICY_MOSS_0DAC87810 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match you app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "built" # App source code path
          app_artifact_location: "public" # Subfolder in built
          ###### End of Repository/Build Configurations #####

      - name: "Back to master"
        run: |
          git checkout master

      # Uses Danger to communicate with the PR
      # We fake the CI (it's not a CI run, because this workflow occurs outside of the PR)
      - run: "npx danger-ts ci"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_DEPLOY_URL_ROOT: ${{ steps.deploy.outputs.static_web_app_url }}
          DEBUG: "*"
          DANGER_FAKE_CI: true
          DANGER_TEST_REPO: ${{ steps.pr_info.outputs.repo }}
          DANGER_TEST_PR: ${{ steps.pr_info.outputs.number }}

# TODO: Add close, we can probably pass over a close message to this somehow

# close_pull_request_job:
#   if: github.event_name == 'pull_request' && github.event.action == 'closed'
#   runs-on: ubuntu-latest
#   name: Close Pull Request Job
#   steps:
#     - name: Close Pull Request
#       id: closepullrequest
#       uses: Azure/static-web-apps-deploy@v0.0.1-preview
#       with:
#         azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ICY_MOSS_0DAC87810 }}
#         action: "close"
